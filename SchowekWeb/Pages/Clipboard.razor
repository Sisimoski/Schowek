@page "/"

@using System.Security.Claims
@using System.IO
@using Microsoft.AspNetCore.Identity
@using SchowekWeb.Data
@using SchowekWeb.Models

@*@inject IWebHostEnvironment env*@
@inject UserManager<AspNetUsers> userManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor
@inject IDataAccess _data

<AuthorizeView Context="Auth">
    <Authorized>
        <h1>Twoje Id: @UserId</h1>
        <h4>Lista schowków: </h4>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#Id Schowka</th>
                    <th scope="col">Użytkownik</th>
                    <th scope="col">Nazwa kategorii</th>
                    <th scope="col">Ikona</th>
                    <th scope="col">Utworzono</th>
                </tr>
            </thead>
            <tbody>
                @if (Categories != null)
                {
                    @foreach (var category in Categories)
                    {
                        <tr>
                            <th>@category.Id</th>
                            <td>@category.UserId</td>
                            <td>@category.CategoryName</td>
                            <td>@category.Icon</td>
                            <td>@category.OnCreated</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <h4>Lista Twoich schowków (@UserId): </h4>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#Id Schowka</th>
                    <th scope="col">Użytkownik</th>
                    <th scope="col">Nazwa kategorii</th>
                    <th scope="col">Ikona</th>
                    <th scope="col">Utworzono</th>
                </tr>
            </thead>
            <tbody>
                @if (Categories != null)
                {
                    @foreach (var category in UsersCategories)
                    {
                        <tr>
                            <th>@category.Id</th>
                            <td>@category.UserId</td>
                            <td>@category.CategoryName</td>
                            <td>@category.Icon</td>
                            <td>@category.OnCreated</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </Authorized>
    <NotAuthorized>
        <h1>Witaj w Schowku</h1>
        <p>
            Aby zacząć korzystać ze schowka zaloguj się lub zarejestruj konto, jeśli jeszcze nie masz.
        </p>
    </NotAuthorized>
</AuthorizeView>

@code {
    @*IReadOnlyList<IBrowserFile> selectedFiles;

        private void OnInputFileChange(InputFileChangeEventArgs e)
        {
            selectedFiles = e.GetMultipleFiles();
            this.StateHasChanged();
        }*@

    public string UserId { get; set; }

    List<Category> Categories;

    List<Category> UsersCategories;

    Category clipboard = new Category();

    private async Task InsertCategory()
    {
        var newCategory = new Category
        {
            CategoryName = clipboard.CategoryName,
            Icon = clipboard.Icon,
            OnCreated = DateTime.Now,
            UserId = this.UserId
        };
        await _data.AddCategory(newCategory);
        await OnInitializedAsync();
    }


    @*public byte[] ImageToByteArray(System.Drawing.Image imageInput)
        {
            using(var ms = new MemoryStream())
            {
                imageInput.Save(ms, System.Drawing.Imaging.ImageFormat)
            }
        }
        private async Task UploadCategoryIconToDatabase()
        {

        }*@

public void GetUserIdData()
{
    if (_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated == true)
    {
        UserId = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value;
    }
}

protected override void OnInitialized()
{
    GetUserIdData();
}

protected override async Task OnInitializedAsync()
{
    Categories = await _data.GetCategories();
    UsersCategories = await _data.GetUsersCategory(UserId);
}

}
