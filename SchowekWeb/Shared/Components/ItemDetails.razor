@using System.Globalization
@using SchowekWeb.Data
@using SchowekWeb.Models
@inject IDataAccess _data
@inject NavigationManager navManager

<div class="modal @ModalClass" id="@($"itemDetails{ItemModel.Id}")" tabindex="-1" aria-hidden="true" style="display:@ModalDisplay">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary">@ItemModel.Category.CategoryName</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-primary">@ItemModel.Text</p>
                <hr />
                <small class="text-light">@ItemModel.OnCreated.ToString("f", culture)</small>
            </div>
            <div class="modal-footer">
                <button @onclick="() => Close()" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public Item ItemModel { get; set; }

    [Parameter]
    public string ItemContent { get; set; }

    [Parameter]
    public DateTime ItemOnCreated { get; set; }

    [Parameter]
    public string ItemCategory { get; set; }

    CultureInfo culture = new CultureInfo("pl-PL");

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}
