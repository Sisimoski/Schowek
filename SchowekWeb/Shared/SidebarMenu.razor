@using System.Security.Claims
@using SchowekWeb.Data
@using SchowekWeb.Models
@inject IDataAccess _data
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor

<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-light-primary elevation-4">

    <!-- Sidebar -->
    <div class="sidebar m-0 p-0">
        <!-- Sidebar user panel (optional) -->
        <div class="user-panel pt-3 pb-3 d-flex">
            <div class="image">
                <img src="/dist/img/avatar5.png" class="img-circle elevation-2" alt="User Image">
            </div>
            <AuthorizeView>
                <Authorized>
                    <div class="info">
                        <a href="/Identity/Account/Manage" class="d-block">Witaj, @context.User.Identity.Name</a>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="info">
                        <a href="/Identity/Account/Login" class="d-block">Zaloguj się, aby skorzystać ze schowka.</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <!-- Sidebar Menu -->
        <nav class="mt-2">
            <AuthorizeView>
                <Authorized>
                    <ul class="nav nav-pills nav-sidebar flex-column mx-2" data-widget="treeview" role="menu"
                        data-accordion="false">

                        <li class="nav-item border border-primary rounded">
                            <NavLink href="#addNewCategory" class="nav-link m-0" data-bs-toggle="modal">
                                <i class="nav-icon text-primary bi bi-plus-square"></i>
                                <p>
                                    Dodaj nowy schowek
                                </p>
                            </NavLink>
                        </li>
                    </ul>
                    <hr class="mx-2" />
                    <ul class="nav nav-pills nav-sidebar flex-column mx-2" data-widget="treeview" role="menu"
                        data-accordion="false">

                        <li class="nav-item">
                            <NavLink href="/Dashboard" class="nav-link">
                                <i class="nav-icon bi bi-columns-gap"></i>
                                <p>
                                    Dashboard
                                </p>
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink href="/Users" class="nav-link">
                                <i class="nav-icon bi bi-people-fill"></i>
                                <p>
                                    Lista użytkowników
                                </p>
                            </NavLink>
                        </li>
                        @if (Categories != null)
                        {
                            @foreach (var clipboards in Categories)
                            {
                                <li class="nav-item">
                                    <NavLink href=@($"/Clipboard/{clipboards.Id}") class="nav-link" @onclick="StateHasChanged">
                                        <i class="nav-icon bi bi-card-list"></i>
                                        <p>
                                            @clipboards.CategoryName
                                        </p>
                                    </NavLink>
                                </li>
                            }
                        }
                        else
                        {

                        }
                    </ul>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <Authorized>
                    <ul class="nav nav-pills nav-sidebar flex-column" style="position: absolute; bottom: 0;">
                        <li class="nav-item">
                            <form method="post" action="/Identity/Account/LogOut">
                                <button type="submit" class="btn btn-link nav-link">
                                    <i class="nav-icon bi bi-box-arrow-in-left"></i>
                                    <p>
                                        Wyloguj się
                                    </p>
                                </button>
                            </form>
                        </li>
                    </ul>
                </Authorized>
                <NotAuthorized>
                    <ul class="nav nav-pills nav-sidebar flex-column" style="position: absolute; bottom: 0;">
                        <li class="nav-item">
                            <a href="/Identity/Account/Login" class="nav-link">
                                <i class="nav-icon bi bi-box-arrow-in-right"></i>
                                <p>
                                    Zaloguj się
                                </p>
                            </a>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>
        </nav>
        <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
</aside>

<!-- Modal -->
<EditForm Model="@newCategory" OnValidSubmit="@InsertCategory">
    <div class="modal fade" id="addNewCategory" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Dodaj nowy schowek</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <DataAnnotationsValidator />
                    <InputText @bind-Value="@newCategory.CategoryName" type="text" class="form-control" placeholder="Wprowadź nazwę schowka" />
                    <ValidationMessage For="() => newCategory.CategoryName" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Anuluj</button>
                    <button type="submit" class="btn btn-primary">Dodaj</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    List<Category> Categories;

    public string UserId { get; set; }

    private DisplayCategoryModel newCategory = new DisplayCategoryModel();

    private async Task InsertCategory()
    {
        Category c = new Category
        {
            CategoryName = newCategory.CategoryName,
            Icon = newCategory.Icon,
            OnCreated = DateTime.Now,
            UserId = this.UserId
        };
        await _data.AddCategory(c);

        Categories.Add(c);

        newCategory = new DisplayCategoryModel();
    }

    public void GetUserIdData()
    {
        if (_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated == true)
        {
            UserId = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value;
        }
    }

    protected override void OnInitialized()
    {
        GetUserIdData();
    }

    protected override async Task OnInitializedAsync()
    {
        Categories = await _data.GetUsersCategories(UserId);

    }
}